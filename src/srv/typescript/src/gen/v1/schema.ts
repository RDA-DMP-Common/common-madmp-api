/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/dmps": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List/search DMPs
         * @description This endpoint lists all DMPs or allows for creating a filtered list. When filters are provided,
         *     all filter are applied (AND relationship). For filters supporting lists, the individual values are applied
         *     as an OR relationship.
         *
         *     For items accepting more than one value you may pass multiple values by repeating the parameter in the
         *     query string for each item.
         *
         */
        get: operations["listDMPs"];
        put?: never;
        /**
         * Create a DMP
         * @description Create or import a DMP from a JSON-formed DMP object. The implementation may opt to allow the creation of
         *     draft DMPs with formally valid, but incomplete fields. Alternatively, the implementation may reject incomplete
         *     DMPs if it cannot store them.
         *
         */
        post: operations["createDMP"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dmps/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a DMP
         * @description Fetch a DMP based on its ID.
         *
         */
        get: operations["getDMP"];
        /**
         * Overwrite a DMP
         * @description Completely overwrite a DMP with the specified data. The server MUST honor the If-Unmodified-Since and IF-Match
         *     headers if present.
         *
         */
        put: operations["putDMP"];
        post?: never;
        /**
         * Delete a DMP
         * @description Delete a DMP based on its ID.
         */
        delete: operations["deleteDMP"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        DMPSystemID: string;
        DMPDocument: {
            dmp?: components["schemas"]["DMPData"];
        };
        DMPWithID: components["schemas"]["DMPDocument"] & {
            /**
             * ID
             * @description A system-dependent identifier for this DMP. The identifier is not valid outside of the current API, use the dmpId field in the DMP object itself it you need a system-independent identifier.
             */
            id: components["schemas"]["DMPSystemID"];
        };
        DMPListResponseBody: {
            total_count: number;
            items: components["schemas"]["DMPWithID"][];
        };
        /** Abstract error */
        Error: {
            /** Error code */
            error_code: string;
            /**
             * Error message
             * @description A description of the error in English.
             */
            error_message: string;
        };
        /**
         * Authentication required
         * @description Authentication required to perform the specified request.
         */
        AuthenticationRequiredError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "authentication_required";
        };
        /**
         * Insufficient permissions
         * @description The current user has insufficient permissions to perform this action.
         */
        InsufficientPermissionsError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "insufficient_permissions";
        };
        /**
         * Cannot meet Accept requirements
         * @description The client has requested a DMP standard that the server cannot fulfill.
         */
        NotAcceptableError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "not_acceptable";
        };
        /**
         * Unsupported DMP standard
         * @description The server cannot process the DMP sent by the client because it does not support th especified MIME type.
         */
        UnsupportedMediaTypeError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "unsupported_media_type";
        };
        /**
         * DMP already exists
         * @description The DMP system has identified this DMP to be already present in the system based on its DMP ID or other
         *     characteristics. The error response SHOULD contain the existing DMP ID.
         *
         */
        DMPAlreadyExistsError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "dmp_already_exists";
        };
        /**
         * DMP not found / insufficient permissions to access DMP
         * @description This error can mean two things: either the specified DMP does not exist, or the implementation has chosen to
         *     return a 404 error instead of a 401 or 403 to avoid leaking information about the existence of a DMP. If the
         *     requester is not authenticated, the request may be retried after authentication to possibly retrieve the DMP.
         *
         */
        DMPNotFoundError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "dmp_not_found";
        };
        /**
         * Invalid query string
         * @description The passed query string for a list request was invalid.
         *
         */
        InvalidQueryStringError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "invalid_query_string";
        } & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            error_code: "invalid_query_string";
        };
        /**
         * Conflict
         * @description The server failed to apply the patch because a JSON Patch test failed. If the patch applies successfully, but
         *     results in an invalid DMP, an DMPInvalidResponse (400) is returned instead.
         *
         */
        ConflictError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "conflict";
        };
        /**
         * Bad request
         * @description The passed HTTP request was invalid.
         */
        BadRequestError: components["schemas"]["InvalidQueryStringError"] | components["schemas"]["DMPInvalidError"] | components["schemas"]["GenericBadRequestError"];
        /**
         * Bad request
         * @description The request the client sent is invalid.
         */
        GenericBadRequestError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "bad_request";
        } & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            error_code: "bad_request";
        };
        /**
         * Invalid DMP
         * @description The passed DMP was invalid
         */
        DMPInvalidError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "dmp_invalid";
        } & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            error_code: "invalid_dmp";
        };
        /** Generic error */
        GenericError: components["schemas"]["Error"] & {
            /**
             * Error code
             * @constant
             */
            error_code: "generic_error";
        };
        DMP: {
            dmp?: components["schemas"]["DMPData"];
        };
        /**
         * The DMP Ethical Issues Exist Schema
         * @description To indicate whether there are ethical issues related to data that this DMP describes. Allowed values: yes, no, unknown
         * @enum {string}
         */
        Booleanish: "yes" | "no" | "unknown";
        /**
         * The Dataset Distribution Host Certification Type Schema
         * @description Repository certified to a recognised standard. Allowed values: din31644, dini-zertifikat, dsa, iso16363, iso16919, trac, wds, coretrustseal
         * @enum {string}
         */
        Certification: "din31644" | "dini-zertifikat" | "dsa" | "iso16363" | "iso16919" | "trac" | "wds" | "coretrustseal";
        /** The DMP Contact Schema */
        Contact: {
            contact_id: components["schemas"]["ContactID"];
            /**
             * The Mailbox Schema
             * Format: email
             * @description Contact Person's E-mail address
             */
            mbox: string;
            /**
             * The Name Schema
             * @description Name of the contact person
             */
            name: string;
        };
        /** The Contributor Items Schema */
        Contributor: {
            contributor_id: components["schemas"]["ContributorID"];
            /**
             * The Contributor Mailbox Schema
             * Format: email
             * @description Contributor Mail address
             */
            mbox?: string;
            /**
             * The Name Schema
             * @description Name of the contributor
             */
            name: string;
            role: components["schemas"]["ContributorRoles"];
        };
        /** The Contributor ID Schema */
        ContributorID: {
            identifier: components["schemas"]["ContributorIDValue"];
            type: components["schemas"]["ContributorIDType"];
        };
        /**
         * The DMP Contact Identifier Type Schema
         * @description Identifier type. Allowed values: orcid, isni, openid, other
         * @enum {string}
         */
        ContributorIDType: "orcid" | "isni" | "openid" | "other";
        /** The DMP Contributor Identifier Schema */
        ContributorIDValue: string;
        /** The Contributor Role(s) Items Schema */
        ContributorRole: string;
        /**
         * The Role Schema
         * @description Type of contributor
         */
        ContributorRoles: components["schemas"]["ContributorRole"][];
        /** The Contributor Schema */
        Contributors: components["schemas"]["Contributor"][];
        /** The Contact ID Schema */
        ContactID: {
            identifier: components["schemas"]["ContactIDValue"];
            type: components["schemas"]["ContactIDType"];
        };
        /**
         * The DMP Contact Identifier Type Schema
         * @description Identifier type. Allowed values: orcid, isni, openid, other
         * @enum {string}
         */
        ContactIDType: "orcid" | "isni" | "openid" | "other";
        /** The DMP Contact Identifier Schema */
        ContactIDValue: string;
        /** The Cost Items Schema */
        Cost: {
            currency_code?: components["schemas"]["CurrencyCode"];
            /**
             * The Cost Description Schema
             * @description Cost(s) Description
             */
            description?: string;
            /**
             * The Cost Title Schema
             * @description Title
             */
            title: string;
            /**
             * The Cost Value Schema
             * @description Value
             */
            value?: number;
        };
        /** The Cost Schema */
        Costs: components["schemas"]["Cost"][];
        /**
         * The Cost Currency Code Schema
         * @description Allowed values defined by ISO 4217
         * @enum {string}
         */
        CurrencyCode: "AED" | "AFN" | "ALL" | "AMD" | "ANG" | "AOA" | "ARS" | "AUD" | "AWG" | "AZN" | "BAM" | "BBD" | "BDT" | "BGN" | "BHD" | "BIF" | "BMD" | "BND" | "BOB" | "BRL" | "BSD" | "BTN" | "BWP" | "BYN" | "BZD" | "CAD" | "CDF" | "CHF" | "CLP" | "CNY" | "COP" | "CRC" | "CUC" | "CUP" | "CVE" | "CZK" | "DJF" | "DKK" | "DOP" | "DZD" | "EGP" | "ERN" | "ETB" | "EUR" | "FJD" | "FKP" | "GBP" | "GEL" | "GGP" | "GHS" | "GIP" | "GMD" | "GNF" | "GTQ" | "GYD" | "HKD" | "HNL" | "HRK" | "HTG" | "HUF" | "IDR" | "ILS" | "IMP" | "INR" | "IQD" | "IRR" | "ISK" | "JEP" | "JMD" | "JOD" | "JPY" | "KES" | "KGS" | "KHR" | "KMF" | "KPW" | "KRW" | "KWD" | "KYD" | "KZT" | "LAK" | "LBP" | "LKR" | "LRD" | "LSL" | "LYD" | "MAD" | "MDL" | "MGA" | "MKD" | "MMK" | "MNT" | "MOP" | "MRU" | "MUR" | "MVR" | "MWK" | "MXN" | "MYR" | "MZN" | "NAD" | "NGN" | "NIO" | "NOK" | "NPR" | "NZD" | "OMR" | "PAB" | "PEN" | "PGK" | "PHP" | "PKR" | "PLN" | "PYG" | "QAR" | "RON" | "RSD" | "RUB" | "RWF" | "SAR" | "SBD" | "SCR" | "SDG" | "SEK" | "SGD" | "SHP" | "SLL" | "SOS" | "SPL*" | "SRD" | "STN" | "SVC" | "SYP" | "SZL" | "THB" | "TJS" | "TMT" | "TND" | "TOP" | "TRY" | "TTD" | "TVD" | "TWD" | "TZS" | "UAH" | "UGX" | "USD" | "UYU" | "UZS" | "VEF" | "VND" | "VUV" | "WST" | "XAF" | "XCD" | "XDR" | "XOF" | "XPF" | "YER" | "ZAR" | "ZMW" | "ZWD";
        /**
         * The Dataset Distribution Host Geographical Location Schema
         * @description Physical location of the data expressed using ISO 3166-1 country code.
         * @enum {string}
         */
        CountryCode: "AD" | "AE" | "AF" | "AG" | "AI" | "AL" | "AM" | "AO" | "AQ" | "AR" | "AS" | "AT" | "AU" | "AW" | "AX" | "AZ" | "BA" | "BB" | "BD" | "BE" | "BF" | "BG" | "BH" | "BI" | "BJ" | "BL" | "BM" | "BN" | "BO" | "BQ" | "BR" | "BS" | "BT" | "BV" | "BW" | "BY" | "BZ" | "CA" | "CC" | "CD" | "CF" | "CG" | "CH" | "CI" | "CK" | "CL" | "CM" | "CN" | "CO" | "CR" | "CU" | "CV" | "CW" | "CX" | "CY" | "CZ" | "DE" | "DJ" | "DK" | "DM" | "DO" | "DZ" | "EC" | "EE" | "EG" | "EH" | "ER" | "ES" | "ET" | "FI" | "FJ" | "FK" | "FM" | "FO" | "FR" | "GA" | "GB" | "GD" | "GE" | "GF" | "GG" | "GH" | "GI" | "GL" | "GM" | "GN" | "GP" | "GQ" | "GR" | "GS" | "GT" | "GU" | "GW" | "GY" | "HK" | "HM" | "HN" | "HR" | "HT" | "HU" | "ID" | "IE" | "IL" | "IM" | "IN" | "IO" | "IQ" | "IR" | "IS" | "IT" | "JE" | "JM" | "JO" | "JP" | "KE" | "KG" | "KH" | "KI" | "KM" | "KN" | "KP" | "KR" | "KW" | "KY" | "KZ" | "LA" | "LB" | "LC" | "LI" | "LK" | "LR" | "LS" | "LT" | "LU" | "LV" | "LY" | "MA" | "MC" | "MD" | "ME" | "MF" | "MG" | "MH" | "MK" | "ML" | "MM" | "MN" | "MO" | "MP" | "MQ" | "MR" | "MS" | "MT" | "MU" | "MV" | "MW" | "MX" | "MY" | "MZ" | "NA" | "NC" | "NE" | "NF" | "NG" | "NI" | "NL" | "NO" | "NP" | "NR" | "NU" | "NZ" | "OM" | "PA" | "PE" | "PF" | "PG" | "PH" | "PK" | "PL" | "PM" | "PN" | "PR" | "PS" | "PT" | "PW" | "PY" | "QA" | "RE" | "RO" | "RS" | "RU" | "RW" | "SA" | "SB" | "SC" | "SD" | "SE" | "SG" | "SH" | "SI" | "SJ" | "SK" | "SL" | "SM" | "SN" | "SO" | "SR" | "SS" | "ST" | "SV" | "SX" | "SY" | "SZ" | "TC" | "TD" | "TF" | "TG" | "TH" | "TJ" | "TK" | "TL" | "TM" | "TN" | "TO" | "TR" | "TT" | "TV" | "TW" | "TZ" | "UA" | "UG" | "UM" | "US" | "UY" | "UZ" | "VA" | "VC" | "VE" | "VG" | "VI" | "VN" | "VU" | "WF" | "WS" | "YE" | "YT" | "ZA" | "ZM" | "ZW";
        /**
         * The Dataset Distribution Data Access Schema
         * @description Indicates access mode for data. Allowed values: open, shared, closed
         * @enum {string}
         */
        DataAccess: "open" | "shared" | "closed";
        /** The Dataset Items Schema */
        Dataset: {
            /**
             * The Data Quality Assurance Schema
             * @description Data Quality Assurance
             */
            data_quality_assurance?: string[];
            dataset_id: components["schemas"]["DatasetID"];
            /**
             * The Dataset Description Schema
             * @description Description is a property in both Dataset and Distribution, in compliance with W3C DCAT. In some cases these might be identical, but in most cases the Dataset represents a more abstract concept, while the distribution can point to a specific file.
             */
            description?: string;
            /**
             * The Dataset Distribution Schema
             * @description To provide technical information on a specific instance of data.
             */
            distribution?: components["schemas"]["Distribution"][];
            /**
             * The Dataset Is Reused Schema
             * @description Indicates if the dataset is reused, i.e., not produced in project(s) covered by this DMP.
             */
            is_reused?: boolean;
            /**
             * The Dataset Date of Issue Schema
             * Format: date
             * @description Issued. Encoded using the relevant ISO 8601 Date compliant string.
             */
            issued?: string;
            /**
             * The Dataset Keyword(s) Schema
             * @description Keywords
             */
            keyword?: string[];
            /**
             * The Dataset Language Schema
             * @description Language of the dataset expressed using ISO 639-3.
             * @enum {string}
             */
            language?: "aar" | "abk" | "afr" | "aka" | "amh" | "ara" | "arg" | "asm" | "ava" | "ave" | "aym" | "aze" | "bak" | "bam" | "bel" | "ben" | "bih" | "bis" | "bod" | "bos" | "bre" | "bul" | "cat" | "ces" | "cha" | "che" | "chu" | "chv" | "cor" | "cos" | "cre" | "cym" | "dan" | "deu" | "div" | "dzo" | "ell" | "eng" | "epo" | "est" | "eus" | "ewe" | "fao" | "fas" | "fij" | "fin" | "fra" | "fry" | "ful" | "gla" | "gle" | "glg" | "glv" | "grn" | "guj" | "hat" | "hau" | "hbs" | "heb" | "her" | "hin" | "hmo" | "hrv" | "hun" | "hye" | "ibo" | "ido" | "iii" | "iku" | "ile" | "ina" | "ind" | "ipk" | "isl" | "ita" | "jav" | "jpn" | "kal" | "kan" | "kas" | "kat" | "kau" | "kaz" | "khm" | "kik" | "kin" | "kir" | "kom" | "kon" | "kor" | "kua" | "kur" | "lao" | "lat" | "lav" | "lim" | "lin" | "lit" | "ltz" | "lub" | "lug" | "mah" | "mal" | "mar" | "mkd" | "mlg" | "mlt" | "mon" | "mri" | "msa" | "mya" | "nau" | "nav" | "nbl" | "nde" | "ndo" | "nep" | "nld" | "nno" | "nob" | "nor" | "nya" | "oci" | "oji" | "ori" | "orm" | "oss" | "pan" | "pli" | "pol" | "por" | "pus" | "que" | "roh" | "ron" | "run" | "rus" | "sag" | "san" | "sin" | "slk" | "slv" | "sme" | "smo" | "sna" | "snd" | "som" | "sot" | "spa" | "sqi" | "srd" | "srp" | "ssw" | "sun" | "swa" | "swe" | "tah" | "tam" | "tat" | "tel" | "tgk" | "tgl" | "tha" | "tir" | "ton" | "tsn" | "tso" | "tuk" | "tur" | "twi" | "uig" | "ukr" | "urd" | "uzb" | "ven" | "vie" | "vol" | "wln" | "wol" | "xho" | "yid" | "yor" | "zha" | "zho" | "zul";
            /**
             * The Dataset Metadata Schema
             * @description To describe metadata standards used.
             */
            metadata?: components["schemas"]["Metadata"][];
            /**
             * The Dataset Personal Data Schema
             * @description If any personal data is contained. Allowed values: yes, no, unknown
             * @enum {string}
             */
            personal_data: "yes" | "no" | "unknown";
            /**
             * The Dataset Preservation Statement Schema
             * @description Preservation Statement
             */
            preservation_statement?: string;
            security_and_privacy?: components["schemas"]["SecurityAndPrivacyItems"];
            /**
             * The Dataset Sensitive Data Schema
             * @description If any sensitive data is contained. Allowed values: yes, no, unknown
             * @enum {string}
             */
            sensitive_data: "yes" | "no" | "unknown";
            technical_resource?: components["schemas"]["TechnicalResources"];
            /**
             * The Dataset Title Schema
             * @description Title is a property in both Dataset and Distribution, in compliance with W3C DCAT. In some cases these might be identical, but in most cases the Dataset represents a more abstract concept, while the distribution can point to a specific file.
             */
            title: string;
            /**
             * The Dataset Type Schema
             * @description If appropriate, type according to: DataCite and/or COAR dictionary. Otherwise use the common name for the type, e.g. raw data, software, survey, etc. https://schema.datacite.org/meta/kernel-4.1/doc/DataCite-MetadataKernel_v4.1.pdf http://vocabularies.coar-repositories.org/pubby/resource_type.html
             */
            type?: string;
        };
        /**
         * The Dataset ID Schema
         * @description Dataset ID
         */
        DatasetID: {
            identifier: components["schemas"]["DatasetIDValue"];
            type: components["schemas"]["DatasetIDType"];
        };
        /** The Dataset Schema */
        Datasets: components["schemas"]["Dataset"][];
        /**
         * The Dataset Identifier Type Schema
         * @description Dataset identifier type. Allowed values: handle, doi, ark, url, other
         * @enum {string}
         */
        DatasetIDType: "handle" | "doi" | "ark" | "url" | "other";
        /**
         * The Dataset Identifier Schema
         * @description Identifier for a dataset
         */
        DatasetIDValue: string;
        /** The DMP Schema */
        DMPData: {
            contact: components["schemas"]["Contact"];
            contributor?: components["schemas"]["Contributors"];
            cost?: components["schemas"]["Costs"];
            /**
             * The DMP Creation Schema
             * Format: date-time
             * @description Date and time of the first version of a DMP. Must not be changed in subsequent DMPs. Encoded using the relevant ISO 8601 Date and Time (with timezone) compliant string
             */
            created: string;
            dataset: components["schemas"]["Datasets"];
            /**
             * The DMP Description Schema
             * @description To provide any free-form text information on a DMP
             */
            description?: string;
            dmp_id: components["schemas"]["DMPID"];
            /**
             * The DMP Ethical Issues Description Schema
             * @description To describe ethical issues directly in a DMP
             */
            ethical_issues_description?: string;
            ethical_issues_exist: components["schemas"]["Booleanish"];
            /**
             * The DMP Ethical Issues Report Schema
             * Format: url
             * @description To indicate where a protocol from a meeting with an ethical commitee can be found
             */
            ethical_issues_report?: string;
            language: components["schemas"]["LanguageID"];
            /**
             * The DMP Modification Schema
             * Format: date-time
             * @description Must be set each time DMP is modified. Indicates DMP version. Encoded using the relevant ISO 8601 Date and Time (with timezone) compliant string.
             */
            modified: string;
            /**
             * The DMP Project Schema
             * @description Project related to a DMP
             */
            project?: components["schemas"]["Project"][];
            /**
             * The DMP Title Schema
             * @description Title of a DMP
             */
            title: string;
        };
        /**
         * The DMP Identifier Schema
         * @description Identifier for the DMP itself
         */
        DMPID: {
            identifier: components["schemas"]["DMPIDValue"];
            type: components["schemas"]["DMPIDType"];
        };
        /**
         * The DMP Identifier Type Schema
         * @description The DMP Identifier Type. Allowed values: handle, doi, ark, url, other
         * @enum {string}
         */
        DMPIDType: "handle" | "doi" | "ark" | "url" | "other";
        /**
         * The DMP Identifier Value Schema
         * @description Identifier for a DMP
         */
        DMPIDValue: string;
        /** The Dataset Distribution Items Schema */
        Distribution: {
            /**
             * The Dataset Distribution Access URL Schema
             * @description A URL of the resource that gives access to a distribution of the dataset. e.g. landing page.
             */
            access_url?: string;
            /**
             * The Dataset Distribution Available Until Schema
             * Format: date
             * @description Indicates how long this distribution will be/ should be available. Encoded using the relevant ISO 8601 Date compliant string.
             */
            available_until?: string;
            /**
             * The Dataset Distribution Byte Size Schema
             * @description Size in bytes.
             */
            byte_size?: number;
            data_access: components["schemas"]["DataAccess"];
            /**
             * The Dataset Distribution Description Schema
             * @description Description is a property in both Dataset and Distribution, in compliance with W3C DCAT. In some cases these might be identical, but in most cases the Dataset represents a more abstract concept, while the distribution can point to a specific file.
             */
            description?: string;
            /**
             * The Dataset Distribution Download URL Schema
             * Format: url
             * @description The URL of the downloadable file in a given format. E.g. CSV file or RDF file.
             */
            download_url?: string;
            /**
             * The Dataset Distribution Format Schema
             * @description Format according to: https://www.iana.org/assignments/media-types/media-types.xhtml if appropriate, otherwise use the common name for this format.
             */
            format?: components["schemas"]["MIMEType"][];
            host?: components["schemas"]["Host"];
            license?: components["schemas"]["Licenses"];
            /**
             * The Dataset Distribution Title Schema
             * @description Title is a property in both Dataset and Distribution, in compliance with W3C DCAT. In some cases these might be identical, but in most cases the Dataset represents a more abstract concept, while the distribution can point to a specific file.
             */
            title: string;
        };
        /**
         * The Funder ID Schema
         * @description Funder ID of the associated project
         */
        FunderID: {
            identifier: components["schemas"]["FunderIDValue"];
            type: components["schemas"]["FunderIDType"];
        };
        /**
         * The Funder ID Type Schema
         * @description Identifier type. Allowed values: fundref, url, other
         * @enum {string}
         */
        FunderIDType: "fundref" | "url" | "other";
        /**
         * The Funder ID Value Schema
         * @description Funder ID, recommended to use CrossRef Funder Registry. See: https://www.crossref.org/services/funder-registry/
         */
        FunderIDValue: string;
        /**
         * The Funding Status Schema
         * @description To express different phases of project lifecycle. Allowed values: planned, applied, granted, rejected
         * @enum {string}
         */
        FundingStatus: "planned" | "applied" | "granted" | "rejected";
        /** The DMP Project Funding Items Schema */
        Funding: {
            funder_id: components["schemas"]["FunderID"];
            funding_status?: components["schemas"]["FundingStatus"];
            grant_id?: components["schemas"]["GrantID"];
        };
        /**
         * The DMP Project Funding Schema
         * @description Funding related with a project
         */
        Fundings: components["schemas"]["Funding"][];
        /**
         * The Funding Grant ID Schema
         * @description Grant ID of the associated project
         */
        GrantID: {
            identifier: components["schemas"]["GrantIDValue"];
            type: components["schemas"]["GrantIDType"];
        };
        /**
         * The Funding Grant ID Type Schema
         * @description Identifier type. Allowed values: url, other
         * @enum {string}
         */
        GrantIDType: "url" | "other";
        /**
         * The Funding Grant ID Value Schema
         * @description Grant ID
         */
        GrantIDValue: string;
        /**
         * The Dataset Distribution Host Schema
         * @description To provide information on quality of service provided by infrastructure (e.g. repository) where data is stored.
         */
        Host: {
            /**
             * The Dataset Distribution Host Availability Schema
             * @description Availability
             */
            availability?: string;
            /**
             * The Dataset Distribution Host Backup Frequency Schema
             * @description Backup Frequency
             */
            backup_frequency?: string;
            /**
             * The Dataset Distribution Host Backup Type Schema
             * @description Backup Type
             */
            backup_type?: string;
            certified_with?: components["schemas"]["Certification"];
            /**
             * The Dataset Distribution Host Description Schema
             * @description Description
             */
            description?: string;
            geo_location?: components["schemas"]["CountryCode"];
            pid_system?: components["schemas"]["PidSystems"];
            /**
             * The Dataset Distribution Host Storage Type Schema
             * @description The type of storage required
             */
            storage_type?: string;
            support_versioning?: components["schemas"]["Booleanish"];
            /**
             * The Dataset Distribution Host Title Schema
             * @description Title
             */
            title: string;
            /**
             * The Dataset Distribution Host URL Schema
             * Format: url
             * @description The URL of the system hosting a distribution of a dataset
             */
            url: string;
        };
        /** The Dataset Distribution Format Items Schema */
        MIMEType: string;
        /**
         * The Dataset Metadata Language Schema
         * @description Language of the metadata expressed using ISO 639-3.
         * @enum {string}
         */
        LanguageID: "aar" | "abk" | "afr" | "aka" | "amh" | "ara" | "arg" | "asm" | "ava" | "ave" | "aym" | "aze" | "bak" | "bam" | "bel" | "ben" | "bih" | "bis" | "bod" | "bos" | "bre" | "bul" | "cat" | "ces" | "cha" | "che" | "chu" | "chv" | "cor" | "cos" | "cre" | "cym" | "dan" | "deu" | "div" | "dzo" | "ell" | "eng" | "epo" | "est" | "eus" | "ewe" | "fao" | "fas" | "fij" | "fin" | "fra" | "fry" | "ful" | "gla" | "gle" | "glg" | "glv" | "grn" | "guj" | "hat" | "hau" | "hbs" | "heb" | "her" | "hin" | "hmo" | "hrv" | "hun" | "hye" | "ibo" | "ido" | "iii" | "iku" | "ile" | "ina" | "ind" | "ipk" | "isl" | "ita" | "jav" | "jpn" | "kal" | "kan" | "kas" | "kat" | "kau" | "kaz" | "khm" | "kik" | "kin" | "kir" | "kom" | "kon" | "kor" | "kua" | "kur" | "lao" | "lat" | "lav" | "lim" | "lin" | "lit" | "ltz" | "lub" | "lug" | "mah" | "mal" | "mar" | "mkd" | "mlg" | "mlt" | "mon" | "mri" | "msa" | "mya" | "nau" | "nav" | "nbl" | "nde" | "ndo" | "nep" | "nld" | "nno" | "nob" | "nor" | "nya" | "oci" | "oji" | "ori" | "orm" | "oss" | "pan" | "pli" | "pol" | "por" | "pus" | "que" | "roh" | "ron" | "run" | "rus" | "sag" | "san" | "sin" | "slk" | "slv" | "sme" | "smo" | "sna" | "snd" | "som" | "sot" | "spa" | "sqi" | "srd" | "srp" | "ssw" | "sun" | "swa" | "swe" | "tah" | "tam" | "tat" | "tel" | "tgk" | "tgl" | "tha" | "tir" | "ton" | "tsn" | "tso" | "tuk" | "tur" | "twi" | "uig" | "ukr" | "urd" | "uzb" | "ven" | "vie" | "vol" | "wln" | "wol" | "xho" | "yid" | "yor" | "zha" | "zho" | "zul";
        /** The Dataset Distribution License Items */
        License: {
            /**
             * The Dataset Distribution License Reference Schema
             * Format: url
             * @description Link to license document.
             */
            license_ref: string;
            /**
             * The Dataset Distribution License Start Date Schema
             * Format: date
             * @description If date is set in the future, it indicates embargo period. Encoded using the relevant ISO 8601 Date compliant string.
             */
            start_date: string;
        };
        /**
         * The Dataset Distribution License(s) Schema
         * @description To list all licenses applied to a specific distribution of data.
         */
        Licenses: components["schemas"]["License"][];
        /** The Dataset Metadata Items Schema */
        Metadata: {
            /**
             * The Dataset Metadata Description Schema
             * @description Description
             */
            description?: string;
            language: components["schemas"]["LanguageID"];
            metadata_standard_id: components["schemas"]["MetadataStandardID"];
        };
        /** The Dataset Metadata Standard ID Schema */
        MetadataStandardID: {
            identifier: components["schemas"]["MetadataStandardIDValue"];
            type: components["schemas"]["MetadataStandardIDType"];
        };
        /**
         * The Dataset Metadata Standard Identifier Type Schema
         * @description Identifier type. Allowed values: url, other
         * @enum {string}
         */
        MetadataStandardIDType: "url" | "other";
        /**
         * The Dataset Metadata Standard Identifier Value Schema
         * @description Identifier for the metadata standard used.
         */
        MetadataStandardIDValue: string;
        /**
         * The Dataset Distribution Host PID System Schema
         * @description PID system(s). Allowed values: ark, arxiv, bibcode, doi, ean13, eissn, handle, igsn, isbn, issn, istc, lissn, lsid, pmid, purl, upc, url, urn, other
         */
        PidSystems: components["schemas"]["PidSystemType"][];
        /**
         * The Dataset Distribution Host PID System Items Schema
         * @enum {string}
         */
        PidSystemType: "ark" | "arxiv" | "bibcode" | "doi" | "ean13" | "eissn" | "handle" | "igsn" | "isbn" | "issn" | "istc" | "lissn" | "lsid" | "pmid" | "purl" | "upc" | "url" | "urn" | "other";
        /** The DMP Project Items Schema */
        Project: {
            /**
             * The DMP Project Description Schema
             * @description Project description
             */
            description?: string;
            /**
             * The DMP Project End Date Schema
             * Format: date
             * @description Project end date. Encoded using the relevant ISO 8601 Date compliant string.
             */
            end?: string;
            funding?: components["schemas"]["Fundings"];
            /**
             * The DMP Project Start Date Schema
             * Format: date
             * @description Project start date. Encoded using the relevant ISO 8601 Date compliant string.
             */
            start?: string;
            /**
             * The DMP Project Title Schema
             * @description Project title
             */
            title: string;
        };
        /** The Dataset Security & Policy Items Schema */
        SecurityAndPrivacyItem: {
            /**
             * The Dataset Security & Policy Description Schema
             * @description Description
             */
            description?: string;
            /**
             * The Dataset Security & Policy Title Schema
             * @description Title
             */
            title: string;
        };
        /**
         * The Dataset Security and Policy Schema
         * @description To list all issues and requirements related to security and privacy
         */
        SecurityAndPrivacyItems: components["schemas"]["SecurityAndPrivacyItem"][];
        /** The Dataset Technical Resource Items Schema */
        TechnicalResource: {
            /**
             * The Dataset Technical Resource Description Schema
             * @description Description of the technical resource
             */
            description?: string;
            /**
             * The Dataset Technical Resource Name Schema
             * @description Name of the technical resource
             */
            name: string;
        };
        /**
         * The Dataset Technical Resource Schema
         * @description To list all technical resources needed to implement a DMP
         */
        TechnicalResources: components["schemas"]["TechnicalResource"][];
    };
    responses: {
        /** @description A list of DMPs */
        DMPListResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPListResponseBody"];
                "application/json": components["schemas"]["DMPListResponseBody"];
            };
        };
        /** @description Authentication required to delete the DMP. The implementation should always return this error code for
         *     unauthenticated users as deletion always requires authentication.
         *      */
        AuthenticationRequiredResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["AuthenticationRequiredError"];
                "application/json": components["schemas"]["AuthenticationRequiredError"];
            };
        };
        /** @description Bad request */
        BadRequestResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["BadRequestError"];
                "application/json": components["schemas"]["BadRequestError"];
            };
        };
        /** @description A precondition specified in the If-Unmodified-Since or If-Match header cannot be
         *     fulfilled. The client should apply the modifications again and resubmit the request.
         *      */
        ConflictResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["ConflictError"];
                "application/json": components["schemas"]["ConflictError"];
            };
        };
        /** @description DMP not found or not enough permissions to delete the specified DMP.
         *     Security note: implementations may return this error code even if the DMP exists but the authenticated user
         *     has no permissions to view it in order to avoid leaking information about the existence of a DMP. This may
         *     especially be important if the DMP tool uses numeric IDs to avoid enabling an enumeration of possible DMP
         *     IDs.
         *      */
        DMPNotFoundResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPNotFoundError"];
                "application/json": components["schemas"]["DMPNotFoundError"];
            };
        };
        /** @description The request failed */
        GenericErrorResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["GenericError"];
                "application/json": components["schemas"]["GenericError"];
            };
        };
        /** @description Insufficient permissions to delete the specified a DMP.
         *     Note: the implementation may opt to return a 404 instead to avoid leaking information about the
         *     existence of a DMP with the specified ID if the user has no permissions to at least view this DMP. The
         *     implementation SHOULD return this error code if the user has at least read permissions for this DMP.
         *      */
        InsufficientPermissionsResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["InsufficientPermissionsError"];
                "application/json": components["schemas"]["InsufficientPermissionsError"];
            };
        };
        /** @description The server cannot produce a response that the client requested in its `Accept` header.
         *      */
        NotAcceptableResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["NotAcceptableError"];
                "application/json": components["schemas"]["NotAcceptableError"];
            };
        };
        /** @description The server cannot process the request the client because it does not support the DMP standard the client
         *     sent the document in.
         *      */
        UnsupportedMediaTypeResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["UnsupportedMediaTypeError"];
                "application/json": components["schemas"]["UnsupportedMediaTypeError"];
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listDMPs: {
        parameters: {
            query?: {
                /** @description Number of items to skip from the start. */
                offset?: number;
                /** @description Number of items to fetch. */
                count?: number;
                /** @description A list of fields to sort by with the sort order.
                 *      */
                "sort[]"?: ("title,asc" | "title,desc" | "created,asc" | "created,desc" | "modified,asc" | "modified,desc" | "language,asc" | "language,desc" | "embargo,asc" | "embargo,desc" | "keyword,asc" | "keyword,desc")[];
                created_before?: string;
                created_after?: string;
                modified_before?: string;
                modified_after?: string;
                "languages[]"?: components["schemas"]["LanguageID"][];
                "contact_ids[]"?: components["schemas"]["ContactIDValue"][];
                "contributor_ids[]"?: components["schemas"]["ContributorIDValue"][];
                "dataset_ids[]"?: components["schemas"]["DatasetIDValue"][];
                "metadata_standard_ids[]"?: components["schemas"]["MetadataStandardIDValue"][];
                "dmp_ids[]"?: components["schemas"]["DMPIDValue"][];
                "funder_ids[]"?: components["schemas"]["FunderIDValue"][];
                "grant_ids[]"?: components["schemas"]["GrantIDValue"][];
                query?: string;
                ethical_issues_exist?: boolean;
                embargo_before?: string;
                embargo_after?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["DMPListResponse"];
            400: components["responses"]["BadRequestResponse"];
            401: components["responses"]["AuthenticationRequiredResponse"];
            406: components["responses"]["NotAcceptableResponse"];
            default: components["responses"]["GenericErrorResponse"];
        };
    };
    createDMP: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPDocument"];
                "application/json": components["schemas"]["DMPDocument"];
            };
        };
        responses: {
            /** @description DMP successfully created */
            200: {
                headers: {
                    /** @description The server should expose the time the DMP was last modified to allow for a conditional PUT request.
                     *     This is especially important if the server does not support PATCH requests.
                     *      */
                    "Last-Modified"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPWithID"];
                    "application/json": components["schemas"]["DMPWithID"];
                };
            };
            400: components["responses"]["BadRequestResponse"];
            401: components["responses"]["AuthenticationRequiredResponse"];
            403: components["responses"]["InsufficientPermissionsResponse"];
            406: components["responses"]["NotAcceptableResponse"];
            409: components["responses"]["ConflictResponse"];
            default: components["responses"]["GenericErrorResponse"];
        };
    };
    getDMP: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["DMPSystemID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description DMP retrieved */
            200: {
                headers: {
                    /** @description The server should expose the time the DMP was last modified to allow for a conditional PUT request.
                     *      */
                    "Last-Modified"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPWithID"];
                    "application/json": components["schemas"]["DMPWithID"];
                };
            };
            401: components["responses"]["AuthenticationRequiredResponse"];
            403: components["responses"]["InsufficientPermissionsResponse"];
            404: components["responses"]["DMPNotFoundResponse"];
            406: components["responses"]["NotAcceptableResponse"];
            default: components["responses"]["GenericErrorResponse"];
        };
    };
    putDMP: {
        parameters: {
            query?: never;
            header?: {
                "If-Unmodified-Since"?: string;
            };
            path: {
                id: components["schemas"]["DMPSystemID"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPDocument"];
                "application/json": components["schemas"]["DMPDocument"];
            };
        };
        responses: {
            /** @description DMP modified */
            200: {
                headers: {
                    /** @description The server should expose the time the DMP was last modified to allow for a conditional PUT request.
                     *     This is especially important if the server does not support PATCH requests.
                     *      */
                    "Last-Modified"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.org.rd-alliance.dmp-common.v1.2+json": components["schemas"]["DMPWithID"];
                    "application/json": components["schemas"]["DMPWithID"];
                };
            };
            400: components["responses"]["BadRequestResponse"];
            401: components["responses"]["AuthenticationRequiredResponse"];
            403: components["responses"]["InsufficientPermissionsResponse"];
            404: components["responses"]["DMPNotFoundResponse"];
            406: components["responses"]["NotAcceptableResponse"];
            409: components["responses"]["ConflictResponse"];
            415: components["responses"]["UnsupportedMediaTypeResponse"];
            default: components["responses"]["GenericErrorResponse"];
        };
    };
    deleteDMP: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["DMPSystemID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description DMP deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            401: components["responses"]["AuthenticationRequiredResponse"];
            403: components["responses"]["InsufficientPermissionsResponse"];
            404: components["responses"]["DMPNotFoundResponse"];
            406: components["responses"]["NotAcceptableResponse"];
            409: components["responses"]["ConflictResponse"];
            default: components["responses"]["GenericErrorResponse"];
        };
    };
}
