openapi: 3.0.3

info:
  title: Common maDMP API
  description: |-
    WIP specification of Common maDMP API using the RDA DMP Common Standard.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0

tags:
  - name: DMP
    description: Data Management Plan (top-level entity)
  - name: Contact
    description: ""
  - name: Contributor
    description: ""
  - name: Cost
    description: ""
  - name: Dataset
    description: ""
  - name: Distribution
    description: ""
  - name: Funding
    description: ""
  - name: Host
    description: ""
  - name: License
    description: ""
  - name: Metadata
    description: ""
  - name: Project
    description: ""
  - name: Security and Privacy
    description: ""
  - name: Technical Resource
    description: ""

paths:
  /dmps/query:
    post:
      tags:
        - DMP
      summary: Query DMPs
      description: Retrieve data management plans by sending a query.
      operationId: queryDMPs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DMPQueryRequest'
        required: true
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMPQueryResponse'
        '400':
          description: Invalid query request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          description: Unexpected error
  /dmps:
    post:
      tags:
        - DMP
      summary: Create a DMP
      description: Create a new data management plans.
      operationId: postDMP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DMPCreateRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMPFull'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          description: Unexpected error
  /dmps/{dmpId}:
    get:
      tags:
        - DMP
      summary: Retrieve a DMPs
      description: Retrieve a single data management plan via internal identifier.
      operationId: getDMP
      parameters:
        - name: dmpId
          in: path
          description: ID of DMP to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found DMP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMPFull'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        default:
          description: Unexpected error
    put:
      tags:
        - DMP
      summary: Update a DMP
      description: Update an existing data management plans.
      operationId: putDMP
      parameters:
        - name: dmpId
          in: path
          description: ID of DMP to return
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DMPUpdateRequest'
        required: true
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMPFull'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          description: Unexpected error
    delete:
      tags:
        - DMP
      summary: Delete a DMP
      description: Delete an existing data management plans.
      operationId: deleteDMP
      parameters:
        - name: dmpId
          in: path
          description: ID of DMP to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        default:
          description: Unexpected error

  /dmps/{dmpId}/contacts:
    get:
      tags:
        - Contact
      summary: List contacts of a DMP
      # TODO
      responses: {}
    post:
      tags:
        - Contact
      summary: Create a contact
      # TODO
      responses: {}
  /dmps/{dmpId}/contacts/{contactId}:
    get:
      tags:
        - Contact
      summary: Get a contact
      # TODO
      responses: {}
    put:
      tags:
        - Contact
      summary: Update a contact
      # TODO
      responses: {}
    delete:
      tags:
        - Contact
      summary: Delete a contact
      # TODO
      responses: {}

  /dmps/{dmpId}/contributors:
    get:
      tags:
        - Contributor
      summary: List contributors of a DMP
      # TODO
      responses: {}
    post:
      tags:
        - Contributor
      summary: Create a contributor
      # TODO
      responses: {}
  /dmps/{dmpId}/contributors/{contributorId}:
    get:
      tags:
        - Contributor
      summary: Get a contributor
      # TODO
      responses: {}
    put:
      tags:
        - Contributor
      summary: Update a contributor
      # TODO
      responses: {}
    delete:
      tags:
        - Contributor
      summary: Delete a contributor
      # TODO
      responses: {}

  /dmps/{dmpId}/costs:
    get:
      tags:
        - Cost
      summary: List costs of a DMP
      # TODO
      responses: {}
    post:
      tags:
        - Cost
      summary: Create a cost
      # TODO
      responses: {}
  /dmps/{dmpId}/costs/{costId}:
    get:
      tags:
        - Cost
      summary: Get a cost
      # TODO
      responses: {}
    put:
      tags:
        - Cost
      summary: Update a cost
      # TODO
      responses: {}
    delete:
      tags:
        - Cost
      summary: Delete a cost
      # TODO
      responses: {}

  /dmps/{dmpId}/projects:
    get:
      tags:
        - Project
      summary: List projects of a DMP
      # TODO
      responses: {}
    post:
      tags:
        - Project
      summary: Create a project
      # TODO
      responses: {}
  /dmps/{dmpId}/projects/{projectId}:
    get:
      tags:
        - Project
      summary: Get a project
      # TODO
      responses: {}
    put:
      tags:
        - Project
      summary: Update a project
      # TODO
      responses: {}
    delete:
      tags:
        - Project
      summary: Delete a project
      # TODO
      responses: {}

  /dmps/{dmpId}/projects/{projectId}/fundings:
    get:
      tags:
        - Funding
      summary: List fundings of a project
      # TODO
      responses: {}
    post:
      tags:
        - Funding
      summary: Create a funding
      # TODO
      responses: {}
  /dmps/{dmpId}/projects/{projectId}/fundings/{fundingId}:
    get:
      tags:
        - Funding
      summary: Get a funding
      # TODO
      responses: {}
    put:
      tags:
        - Funding
      summary: Update a funding
      # TODO
      responses: {}
    delete:
      tags:
        - Funding
      summary: Delete a funding
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/query:
    post:
      tags:
        - Dataset
      summary: Query datasets of a DMP
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets:
    post:
      tags:
        - Dataset
      summary: Create a dataset
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}:
    get:
      tags:
        - Dataset
      summary: Get a dataset
      # TODO
      responses: {}
    put:
      tags:
        - Dataset
      summary: Update a dataset
      # TODO
      responses: {}
    delete:
      tags:
        - Dataset
      summary: Delete a dataset
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/{datasetId}/distributions:
    get:
      tags:
        - Distribution
      summary: List distributions of a dataset
      # TODO
      responses: {}
    post:
      tags:
        - Distribution
      summary: Create a distribution
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}/distributions/{distributionId}:
    get:
      tags:
        - Distribution
      summary: Get a distribution
      # TODO
      responses: {}
    put:
      tags:
        - Distribution
      summary: Update a distribution
      # TODO
      responses: {}
    delete:
      tags:
        - Distribution
      summary: Delete a distribution
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/{datasetId}/distributions/{distributionId}/licenses:
    get:
      tags:
        - License
      summary: List licenses of a distribution
      # TODO
      responses: {}
    post:
      tags:
        - License
      summary: Create a license
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}/distributions/{distributionId}/licenses/{licenseId}:
    get:
      tags:
        - License
      summary: Get a license
      # TODO
      responses: {}
    put:
      tags:
        - License
      summary: Update a license
      # TODO
      responses: {}
    delete:
      tags:
        - License
      summary: Delete a license
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/{datasetId}/distributions/{distributionId}/hosts:
    get:
      tags:
        - Host
      summary: List hosts of a distribution
      # TODO
      responses: {}
    post:
      tags:
        - Host
      summary: Create a host
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}/distributions/{distributionId}/hosts/{hostId}:
    get:
      tags:
        - Host
      summary: Get a host
      # TODO
      responses: {}
    put:
      tags:
        - Host
      summary: Update a host
      # TODO
      responses: {}
    delete:
      tags:
        - Host
      summary: Delete a host
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/{datasetId}/security-privacy:
    get:
      tags:
        - Security and Privacy
      summary: List security and privacy records of a dataset
      # TODO
      responses: {}
    post:
      tags:
        - Security and Privacy
      summary: Create a security and privacy record
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}/security-privacy/{securityPrivacyId}:
    get:
      tags:
        - Security and Privacy
      summary: Get a security and privacy record
      # TODO
      responses: {}
    put:
      tags:
        - Security and Privacy
      summary: Update a security and privacy record
      # TODO
      responses: {}
    delete:
      tags:
        - Security and Privacy
      summary: Delete a security and privacy record
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/{datasetId}/technical-resources:
    get:
      tags:
        - Technical Resource
      summary: List technical resources of a dataset
      # TODO
      responses: {}
    post:
      tags:
        - Technical Resource
      summary: Create a technical resource
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}/technical-resources/{technicalResourceId}:
    get:
      tags:
        - Technical Resource
      summary: Get a technical resource
      # TODO
      responses: {}
    put:
      tags:
        - Technical Resource
      summary: Update a technical resource
      # TODO
      responses: {}
    delete:
      tags:
        - Technical Resource
      summary: Delete a technical resource
      # TODO
      responses: {}

  /dmps/{dmpId}/datasets/{datasetId}/metadata:
    get:
      tags:
        - Metadata
      summary: List metadata records of a dataset
      # TODO
      responses: {}
    post:
      tags:
        - Metadata
      summary: Create a metadata record
      # TODO
      responses: {}
  /dmps/{dmpId}/datasets/{datasetId}/metadata/{metadataId}:
    get:
      tags:
        - Metadata
      summary: Get a metadata record
      # TODO
      responses: {}
    put:
      tags:
        - Metadata
      summary: Update a metadata record
      # TODO
      responses: {}
    delete:
      tags:
        - Metadata
      summary: Delete a metadata record
      # TODO
      responses: {}

components:
  schemas:
    DMPQueryRequest:
      type: object
      properties: # TODO: add properties
        size:
          type: integer
          format: int32
          description: Integer representing the page size for pagination.
          example: 20
        offset:
          type: integer
          format: int32
          description: Integer representing the results offset for pagination.
          example: 0
    DMPQueryResponse:
      type: object
      properties: {} # TODO: add properties
    DMPCreateRequest:
      type: object
      properties: {} # TODO: add properties
    DMPUpdateRequest:
      type: object
      properties: {} # TODO: add properties
    DMPFull:
      type: object
      properties: {} # TODO: add properties

